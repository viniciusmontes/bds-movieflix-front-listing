{"ast":null,"code":"var _process$env$REACT_AP, _process$env$REACT_AP2, _process$env$REACT_AP3;\nimport axios from \"axios\";\nimport qs from \"qs\";\nimport history from \"./history\";\nimport { getAuthData } from \"./storage\";\nexport const BASE_URL = (_process$env$REACT_AP = process.env.REACT_APP_BACKEND_URL) !== null && _process$env$REACT_AP !== void 0 ? _process$env$REACT_AP : \"https://movieflix-devsuperior.herokuapp.com\";\nconst CLIENT_ID = (_process$env$REACT_AP2 = process.env.REACT_APP_CLIENT_ID) !== null && _process$env$REACT_AP2 !== void 0 ? _process$env$REACT_AP2 : \"myclientid\";\nconst CLIENT_SECRET = (_process$env$REACT_AP3 = process.env.REACT_APP_CLIENT_SECRET) !== null && _process$env$REACT_AP3 !== void 0 ? _process$env$REACT_AP3 : \"myclientsecret\";\nexport const requestBackendLogin = loginData => {\n  const headers = {\n    \"Content-Type\": \"application/x-www-form-urlencoded\",\n    Authorization: \"Basic \" + window.btoa(CLIENT_ID + \":\" + CLIENT_SECRET)\n  };\n  const data = qs.stringify({\n    ...loginData,\n    grant_type: \"password\"\n  });\n  return axios({\n    method: \"POST\",\n    baseURL: BASE_URL,\n    url: \"/ouath/token\",\n    data,\n    headers\n  });\n};\nexport const requestBackend = config => {\n  const headers = config.withCredentials ? {\n    ...config.headers,\n    Authorization: \"Bearer \" + getAuthData().access_token\n  } : config.headers;\n  return axios({\n    ...config,\n    baseURL: BASE_URL,\n    headers\n  });\n};\naxios.interceptors.request.use(function (config) {\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n});\naxios.interceptors.response.use(function (response) {\n  return response;\n}, function (error) {\n  if (error.response.status === 401) {\n    history.push(\"/\");\n  }\n  return Promise.reject(error);\n});","map":{"version":3,"names":["axios","qs","history","getAuthData","BASE_URL","_process$env$REACT_AP","process","env","REACT_APP_BACKEND_URL","CLIENT_ID","_process$env$REACT_AP2","REACT_APP_CLIENT_ID","CLIENT_SECRET","_process$env$REACT_AP3","REACT_APP_CLIENT_SECRET","requestBackendLogin","loginData","headers","Authorization","window","btoa","data","stringify","grant_type","method","baseURL","url","requestBackend","config","withCredentials","access_token","interceptors","request","use","error","Promise","reject","response","status","push"],"sources":["/Users/viniciusvini/Documents/workspace-vscode/bds-movieflix/frontweb/src/util/requests.ts"],"sourcesContent":["import axios, { AxiosRequestConfig } from \"axios\";\nimport qs from \"qs\";\nimport history from \"./history\";\nimport { getAuthData } from \"./storage\";\n\nexport const BASE_URL = process.env.REACT_APP_BACKEND_URL ?? \"https://movieflix-devsuperior.herokuapp.com\";\n\nconst CLIENT_ID = process.env.REACT_APP_CLIENT_ID ?? \"myclientid\";\nconst CLIENT_SECRET = process.env.REACT_APP_CLIENT_SECRET ?? \"myclientsecret\";\n\ntype LoginData = {\n  username: string;\n  password: string;\n};\n\nexport const requestBackendLogin = (loginData: LoginData) => {\n  const headers = {\n    \"Content-Type\": \"application/x-www-form-urlencoded\",\n    Authorization: \"Basic \" + window.btoa(CLIENT_ID + \":\" + CLIENT_SECRET),\n  };\n\n  const data = qs.stringify({\n    ...loginData,\n    grant_type: \"password\",\n  });\n\n  return axios({\n    method: \"POST\",\n    baseURL: BASE_URL,\n    url: \"/ouath/token\",\n    data,\n    headers,\n  });\n};\n\nexport const requestBackend = (config: AxiosRequestConfig) => {\n  const headers = config.withCredentials\n    ? {\n        ...config.headers,\n        Authorization: \"Bearer \" + getAuthData().access_token,\n      }\n    : config.headers;\n\n  return axios({ ...config, baseURL: BASE_URL, headers });\n};\n\naxios.interceptors.request.use(\n  function (config) {\n    return config;\n  },\n  function (error) {\n    return Promise.reject(error);\n  }\n);\n\naxios.interceptors.response.use(\n  function (response) {\n    return response;\n  },\n  function (error) {\n    if (error.response.status === 401) {\n      history.push(\"/\");\n    }\n    return Promise.reject(error);\n  }\n);\n"],"mappings":";AAAA,OAAOA,KAAK,MAA8B,OAAO;AACjD,OAAOC,EAAE,MAAM,IAAI;AACnB,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,WAAW,QAAQ,WAAW;AAEvC,OAAO,MAAMC,QAAQ,IAAAC,qBAAA,GAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB,cAAAH,qBAAA,cAAAA,qBAAA,GAAI,6CAA6C;AAE1G,MAAMI,SAAS,IAAAC,sBAAA,GAAGJ,OAAO,CAACC,GAAG,CAACI,mBAAmB,cAAAD,sBAAA,cAAAA,sBAAA,GAAI,YAAY;AACjE,MAAME,aAAa,IAAAC,sBAAA,GAAGP,OAAO,CAACC,GAAG,CAACO,uBAAuB,cAAAD,sBAAA,cAAAA,sBAAA,GAAI,gBAAgB;AAO7E,OAAO,MAAME,mBAAmB,GAAIC,SAAoB,IAAK;EAC3D,MAAMC,OAAO,GAAG;IACd,cAAc,EAAE,mCAAmC;IACnDC,aAAa,EAAE,QAAQ,GAAGC,MAAM,CAACC,IAAI,CAACX,SAAS,GAAG,GAAG,GAAGG,aAAa;EACvE,CAAC;EAED,MAAMS,IAAI,GAAGpB,EAAE,CAACqB,SAAS,CAAC;IACxB,GAAGN,SAAS;IACZO,UAAU,EAAE;EACd,CAAC,CAAC;EAEF,OAAOvB,KAAK,CAAC;IACXwB,MAAM,EAAE,MAAM;IACdC,OAAO,EAAErB,QAAQ;IACjBsB,GAAG,EAAE,cAAc;IACnBL,IAAI;IACJJ;EACF,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMU,cAAc,GAAIC,MAA0B,IAAK;EAC5D,MAAMX,OAAO,GAAGW,MAAM,CAACC,eAAe,GAClC;IACE,GAAGD,MAAM,CAACX,OAAO;IACjBC,aAAa,EAAE,SAAS,GAAGf,WAAW,CAAC,CAAC,CAAC2B;EAC3C,CAAC,GACDF,MAAM,CAACX,OAAO;EAElB,OAAOjB,KAAK,CAAC;IAAE,GAAG4B,MAAM;IAAEH,OAAO,EAAErB,QAAQ;IAAEa;EAAQ,CAAC,CAAC;AACzD,CAAC;AAEDjB,KAAK,CAAC+B,YAAY,CAACC,OAAO,CAACC,GAAG,CAC5B,UAAUL,MAAM,EAAE;EAChB,OAAOA,MAAM;AACf,CAAC,EACD,UAAUM,KAAK,EAAE;EACf,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAEDlC,KAAK,CAAC+B,YAAY,CAACM,QAAQ,CAACJ,GAAG,CAC7B,UAAUI,QAAQ,EAAE;EAClB,OAAOA,QAAQ;AACjB,CAAC,EACD,UAAUH,KAAK,EAAE;EACf,IAAIA,KAAK,CAACG,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;IACjCpC,OAAO,CAACqC,IAAI,CAAC,GAAG,CAAC;EACnB;EACA,OAAOJ,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}